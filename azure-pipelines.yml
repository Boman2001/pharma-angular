trigger:
  branches:
    include:
      - main
      - releases/*

resources:
  - repo: self

pool:
  vmImage: 'Ubuntu 18.04'

variables:
  buildConfiguration: 'Release'
  ngBuildConfiguration: '--prod'

steps:

  - task: DeleteFiles@1
    displayName: 'Delete JUnit files'
    inputs:
      SourceFolder: src/junit
      Contents: 'TEST*.xml'

  - task: Npm@1
    displayName: 'npm install'
    inputs:
      command: install
      workingDir: src

  - task: Npm@1
    displayName: 'Build Angular'
    inputs:
      command: custom
      customCommand: run build -- $(ngBuildConfiguration)
      workingDir: src
  - task: CopyFiles@2
    inputs:
      SourceFolder: './server'
      Contents: 'server.js'
      TargetFolder: './dist/pharma-partners-front-end'

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: drop
      targetPath: './dist/pharma-partners-front-end'

  - task: DeleteFiles@1
    displayName: 'Delete Build files'
    inputs:
      Contents: './dist'

  - task: Npm@1
    displayName: 'Test Angular'
    inputs:
      command: custom
      customCommand: run test -- --watch=false --code-coverage
      workingDir: src

  - task: PublishTestResults@2
    displayName: 'Publish Angular test results'
    condition: succeededOrFailed()
    inputs:
      searchFolder: $(System.DefaultWorkingDirectory)/junit
      testRunTitle: Angular
      testResultsFormat: JUnit
      testResultsFiles: "**/*.xml"

  - task: Npm@1
    displayName: 'Lint Angular'
    inputs:
      command: custom
      customCommand: run lint --  --format=stylish
      workingDir: src

  - task: Npm@1
    displayName: 'E2E Test Angular'
    inputs:
      command: custom
      customCommand: run e2e
      workingDir: src

  - task: PublishTestResults@2
    displayName: 'Publish Angular E2E test results'
    condition: succeededOrFailed()
    inputs:
      searchFolder: $(System.DefaultWorkingDirectory)/junit
      testRunTitle: Angular_E2E
      testResultsFormat: JUnit
      testResultsFiles: "**/junit*.xml"
